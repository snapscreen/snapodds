{"version":3,"file":"component---src-templates-product-page-index-tsx-92373ecb725c9036aaf9.js","mappings":"4JAkGA,UAhFiD,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClDC,EAAUF,EAAKG,IACfC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QAEZC,GAAQC,EAAAA,EAAAA,GAASP,EAAQQ,YAAYF,OAErCG,GAAkBC,EAAAA,EAAAA,UAClBC,GAAqBD,EAAAA,EAAAA,UAE3B,OACE,gBAAC,KAAD,CAAQX,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,KAAD,CACEG,MAAOL,EAAQQ,YAAYH,MAC3BO,YAAaZ,EAAQQ,YAAYI,aAAeZ,EAAQa,UAE1D,gBAAC,KAAD,CACER,MAAOL,EAAQQ,YAAYM,MAC3BC,KAAMf,EAAQQ,YAAYI,cAE5B,gBAAC,KAAD,KACE,2BAASI,UAAU,qFACjB,uBAAKA,UAAU,0CACb,uBAAKA,UAAU,4BACb,gBAAC,EAAAC,EAAD,CACEX,MAAOA,EACPY,IAAKlB,EAAQQ,YAAYW,KACzBC,YAAY,UACZC,OAAO,eAGX,uBAAKL,UAAU,mBACb,uBAAKA,UAAU,2DACZhB,EAAQQ,YAAYW,MAEvB,gBAAC,EAAAG,YAAD,KAActB,EAAQuB,MACtB,uBAAKP,UAAU,aACb,gBAAC,KAAD,CAAQQ,GAAG,OAAOC,UAAU,QAAQC,GAAG,YAAvC,iBAG8B,SAA7B1B,EAAQQ,YAAYW,MACnB,gBAAC,KAAD,CACEK,GAAG,SACHC,UAAU,UACVE,QAAS,kBAAMlB,EAAgBmB,QAAQC,aACvCb,UAAU,gBAJZ,cAS4B,aAA7BhB,EAAQQ,YAAYW,MACnB,gBAAC,KAAD,CACEK,GAAG,SACHC,UAAU,UACVE,QAAS,WACP,OAAOhB,EAAmBiB,QAAQC,aAEpCb,UAAU,gBANZ,eAY0B,SAA7BhB,EAAQQ,YAAYW,MACnB,gBAAC,KAAD,CAAOW,IAAKrB,EAAiBJ,MAAM,oBACjC,gBAAC,KAAD,OAG0B,aAA7BL,EAAQQ,YAAYW,MACnB,gBAAC,KAAD,CAAOW,IAAKnB,EAAoBN,MAAM,wBACpC,gBAAC,KAAD","sources":["webpack://SnapOdds/./src/templates/ProductPage/index.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport {\n  Layout,\n  Container,\n  Hero,\n  Seo,\n  Modal,\n  HsFormDemoSDK,\n  HsFormDemoBanner,\n  Button,\n} from \"@/components\";\nimport { PageProps } from \"@/definitions\";\n\nimport \"./ProductPage.styles.css\";\n\nconst ProductPageTemplate: React.FC<PageProps> = ({ data, location }) => {\n  const product = data.mdx;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n\n  const image = getImage(product.frontmatter.image);\n\n  const modalRefDemoSDK = useRef() as React.MutableRefObject<any>;\n  const modalRefDemoBanner = useRef() as React.MutableRefObject<any>;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={product.frontmatter.title}\n        description={product.frontmatter.description || product.excerpt}\n      />\n      <Hero\n        title={product.frontmatter.claim}\n        lead={product.frontmatter.description}\n      ></Hero>\n      <Container>\n        <article className=\"mx-auto prose prose-xl max-w-full space-y-8 divide-y divide-skin-base-muted mb-16\">\n          <div className=\"flex flex-col md:flex-row items-center\">\n            <div className=\"w-full md:w-1/2 md:mr-16\">\n              <GatsbyImage\n                image={image}\n                alt={product.frontmatter.name}\n                placeholder=\"blurred\"\n                layout=\"fullWidth\"\n              />\n            </div>\n            <div className=\"w-full md:w-1/2\">\n              <div className=\"uppercase text-lg font-bold text-semibold mt-4 lg:mt-16\">\n                {product.frontmatter.name}\n              </div>\n              <MDXRenderer>{product.body}</MDXRenderer>\n              <div className=\"flex mt-8\">\n                <Button as=\"link\" styleType=\"ghost\" to=\"/contact\">\n                  Contact Sales\n                </Button>\n                {product.frontmatter.name === \"Snap\" && (\n                  <Button\n                    as=\"button\"\n                    styleType=\"primary\"\n                    onClick={() => modalRefDemoSDK.current.openModal()}\n                    className=\"ml-8 my-auto\"\n                  >\n                    Get a demo\n                  </Button>\n                )}\n                {product.frontmatter.name === \"SnapOdds\" && (\n                  <Button\n                    as=\"button\"\n                    styleType=\"primary\"\n                    onClick={() => {\n                      return modalRefDemoBanner.current.openModal();\n                    }}\n                    className=\"ml-8 my-auto\"\n                  >\n                    Get a demo\n                  </Button>\n                )}\n              </div>\n              {product.frontmatter.name === \"Snap\" && (\n                <Modal ref={modalRefDemoSDK} title=\"Book a Snap Demo\">\n                  <HsFormDemoSDK />\n                </Modal>\n              )}\n              {product.frontmatter.name === \"SnapOdds\" && (\n                <Modal ref={modalRefDemoBanner} title=\"Book a SnapOdds Demo\">\n                  <HsFormDemoBanner />\n                </Modal>\n              )}\n            </div>\n          </div>\n        </article>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default ProductPageTemplate;\n\nexport const pageQuery = graphql`\n  query ProductBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        claim\n        name\n        description\n        image {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["data","location","product","mdx","siteTitle","site","siteMetadata","title","image","getImage","frontmatter","modalRefDemoSDK","useRef","modalRefDemoBanner","description","excerpt","claim","lead","className","G","alt","name","placeholder","layout","MDXRenderer","body","as","styleType","to","onClick","current","openModal","ref"],"sourceRoot":""}